apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ngrinder.controller.fullname" . }}
  labels:
    {{- include "ngrinder.controller.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "ngrinder.controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ngrinder.controller.selectorLabels" . | nindent 8 }}
      {{- with .Values.controller.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
      {{- with .Values.controller.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.controller.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ngrinder.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      {{- with .Values.controller.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: controller
              containerPort: 16001
              protocol: TCP
            {{- range $index, $port := untilStep 12000 (int (add .Values.agent.maxReplicas 12000)) 1 }}
            - name: console-{{ $index }}
              containerPort: {{ $port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.controller.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.controller.readinessProbe | nindent 12 }}
          volumeMounts:
            - mountPath: /opt/ngrinder-controller
              name: {{ include "ngrinder.controller.pvcname" . }}
            - mountPath: /opt/ngrinder-controller/gitconfig-template.yml
              name: {{ template "ngrinder.controller.fullname" . }}
              subPath: gitconfig-template.yml
              readOnly: true
            - mountPath: /opt/ngrinder-controller/grinder.properties
              name: {{ template "ngrinder.controller.fullname" . }}
              subPath: grinder.properties
              readOnly: true
            - mountPath: /opt/ngrinder-controller/database.conf
              name: {{ template "ngrinder.controller.fullname" . }}
              subPath: database.conf
              readOnly: true
            - mountPath: /opt/ngrinder-controller/system.conf
              name: {{ template "ngrinder.controller.fullname" . }}
              subPath: system.conf
              readOnly: true
          resources:
            {{- .Values.controller.resources | toYaml | trim | nindent 12 }}
      volumes:
        - name: {{ include "ngrinder.controller.pvcname" . }}
        {{- if .Values.controller.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.controller.persistence.existingClaim | default (include "ngrinder.controller.pvcname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: {{ template "ngrinder.controller.fullname" . }}
          configMap:
            name: {{ template "ngrinder.controller.fullname" . }}
            defaultMode: 0755
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}