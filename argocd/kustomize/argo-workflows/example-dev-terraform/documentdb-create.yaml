apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: documentdb-create
spec:
  entrypoint: create
  podGC:
    strategy: OnPodCompletion
  arguments:
    parameters:
    - name: repo
      value: https://github.com/kwangil77/deployment.git
    - name: revision
      value: main
    - name: aws-profile
      value: example-dev
    - name: cluster-identifier
      value: docdb-dev
    - name: engine
      default: docdb
      enum:
      - docdb
    - name: engine-version
      value: 5.0.0
    - name: instance-class
      value: db.t3.medium
    - name: instance-count
      value: 1
    - name: master-username
      value: adminuser
    - name: master-password
      value: admin123
    - name: port
      value: 27017
    - name: parameter-group
      value: docdb-dev
    - name: parameter
      value: "[{\"name\": \"tls\", \"value\": \"disabled\"}]"
    - name: family
      value: docdb5.0
    - name: tag-environment
      default: dev
      enum:
      - dev
      - qa
      - stage
      - prod
    - name: tag-server
      value: was
    - name: tag-service
      value: mongodb
    - name: tag-security-level
      default: moderate
      enum:
      - high
      - moderate
      - low
    - name: tag-team
      value: devops
    - name: tag-part
      value: devops
  templates:
  - name: create
    steps:
    - - name: create-db
        template: create-db
  - name: create-db
    inputs:
      artifacts:
      - name: source
        path: /src
        git:
          repo: "{{ workflow.parameters.repo }}"
          revision: "{{ workflow.parameters.revision }}"
          usernameSecret:
            name: github-secret
            key: username
          passwordSecret:
            name: github-secret
            key: password
    volumes:
    - name: aws-config
      configMap:
        name: aws-config
        items:
        - key: config
          path: config
    - name: terraform-config
      secret:
        secretName: terraform-config
        items:
        - key: config.pg.tfbackend
          path: config.pg.tfbackend
    serviceAccountName: argo-workflow
    container:
      image: docker.io/hashicorp/terraform
      env:
      - name: AWS_PROFILE
        value: "{{ workflow.parameters.aws-profile }}"
      - name: AWS_DEFAULT_REGION
        value: ap-northeast-2
      command:
      - "/bin/sh"
      - "-c"
      args:
      - "
        cd /src/terraform/modules/docdb
        && terraform init -backend-config=/root/.terraform/config.pg.tfbackend
        && terraform workspace new '{{ workflow.parameters.aws-profile }}:{{ workflow.parameters.cluster-identifier }}' || terraform workspace select '{{ workflow.parameters.aws-profile }}:{{ workflow.parameters.cluster-identifier }}'
        && terraform apply -auto-approve
          -var \"profile=${AWS_PROFILE}\"
          -var 'cluster_identifier={{ workflow.parameters.cluster-identifier }}'
          -var 'engine={{ workflow.parameters.engine }}'
          -var 'engine_version={{ workflow.parameters.engine-version }}'
          -var 'instance_class={{ workflow.parameters.instance-class }}'
          -var 'instance_count={{ workflow.parameters.instance-count }}'
          -var 'master_username={{ workflow.parameters.master-username }}'
          -var 'master_password={{ workflow.parameters.master-password }}'
          -var 'port={{ workflow.parameters.port }}'
          -var 'parameter_group={{ workflow.parameters.parameter-group }}'
          -var 'parameter={{ workflow.parameters.parameter }}'
          -var 'family={{ workflow.parameters.family }}'
          -var 'team={{ workflow.parameters.tag-team }}'
          -var 'server={{ workflow.parameters.tag-server }}'
          -var 'service={{ workflow.parameters.tag-service }}'
          -var 'security_level={{ workflow.parameters.tag-security-level }}'
          -var 'environment={{ workflow.parameters.tag-environment }}'
          -var 'part={{ workflow.parameters.tag-part }}'
        "
      workingDir: /src
      resources:
        requests:
          memory: 128Mi
          cpu: 50m
      volumeMounts:
      - name: aws-config
        mountPath: /root/.aws/config
        subPath: config
      - name: terraform-config
        mountPath: /root/.terraform/config.pg.tfbackend
        subPath: config.pg.tfbackend
    nodeSelector:
      kubernetes.io/arch: amd64
      team: devops
      service: devops-infra
      performance_type: standard
